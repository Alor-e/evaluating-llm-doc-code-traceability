[
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The API endpoint summary table is self-contained and provides a clear overview of available catalog operations. 2) Focus Clarity: All methods are related to catalog operations with a single clear focus. 3) Traceability Specificity: Maps directly to specific API endpoints and operations. 4) Atomic Traceability: Contains the complete set of API endpoints without unnecessary details.",
    "concepts": [
      "CatalogCli.createCatalog",
      "CatalogCli.deleteCatalog",
      "CatalogCli.getCatalog",
      "CatalogCli.listCatalogs",
      "CatalogCli.updateCatalog",
      "CatalogService.createCatalog",
      "CatalogService.deleteCatalog",
      "CatalogService.getCatalog",
      "CatalogService.listCatalogs",
      "CatalogService.updateCatalog",
      "CatalogRepository.addCatalog",
      "CatalogRepository.deleteCatalog",
      "CatalogRepository.getCatalog",
      "CatalogRepository.listCatalogs",
      "CatalogRepository.updateCatalog"
    ],
    "order": 1,
    "explanation": [
      "The document is an API endpoint summary table that lists the methods available and their description under the CatalogsApi. Each code is related to one of the methods."
    ]
  },
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: Contains complete details for the createCatalog endpoint. 2) Focus Clarity: All information relates to a single API operation. 3) Traceability Specificity: Maps directly to the createCatalog endpoint and its associated models. 4) Atomic Traceability: Contains exactly the details needed for this operation without extra information.",
    "concepts": [
      "CatalogCli.createCatalog",
      "CatalogService.createCatalog",
      "CatalogRepository.addCatalog",
      "CatalogInfoDAO"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the createCatalog method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: Contains complete details for the deleteCatalog endpoint. 2) Focus Clarity: All information relates to a single deletion operation. 3) Traceability Specificity: Maps directly to the deleteCatalog endpoint and its parameters. 4) Atomic Traceability: Contains exactly the information needed for this operation.",
    "concepts": [
      "CatalogCli.deleteCatalog",
      "CatalogService.deleteCatalog",
      "CatalogRepository.deleteCatalog"
    ],
    "order": 3,
    "explanation": [
      "The document explains what the deleteCatalog method does."
    ]
  },
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: Contains complete details for the getCatalog endpoint. 2) Focus Clarity: All information relates to the single operation of retrieving a catalog. 3) Traceability Specificity: Maps directly to the getCatalog endpoint and CatalogInfo model. 4) Atomic Traceability: Contains exactly the required information for this operation.",
    "concepts": [
      "CatalogCli.getCatalog",
      "CatalogService.getCatalog",
      "CatalogRepository.getCatalog",
      "CatalogInfoDAO"
    ],
    "order": 4,
    "explanation": [
      "The document explains what the getCatalog method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: Contains complete details for the listCatalogs endpoint. 2) Focus Clarity: All information relates to listing catalogs operation. 3) Traceability Specificity: Maps directly to the listCatalogs endpoint and ListCatalogsResponse model. 4) Atomic Traceability: Contains exactly the pagination and response details needed.",
    "concepts": [
      "CatalogCli.listCatalogs",
      "CatalogService.listCatalogs",
      "CatalogRepository.listCatalogs"
    ],
    "order": 5,
    "explanation": [
      "The document explains what the listCatalogs method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/CatalogsApi.md",
    "split_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: Contains complete details for the updateCatalog endpoint. 2) Focus Clarity: All information relates to updating a catalog. 3) Traceability Specificity: Maps directly to the updateCatalog endpoint and related models. 4) Atomic Traceability: Contains exactly the update operation details needed.",
    "concepts": [
      "CatalogCli.updateCatalog",
      "CatalogService.updateCatalog",
      "CatalogRepository.updateCatalog",
      "CatalogInfoDAO"
    ],
    "order": 6,
    "explanation": [
      "The document explains what the updateCatalog method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
    "met_criteria": true,
    "justification": "This split introduces the API endpoints for schema operations and meets all criteria. Independent Understanding: The overview table is self-contained and clearly shows all available endpoints. Focus Clarity: Single focus on API endpoint summary. Traceability Specificity: Direct mapping to specific API endpoints. Atomic Traceability: Contains the minimal complete set of endpoint definitions.",
    "concepts": [
      "SchemaCli.createSchema",
      "SchemaCli.deleteSchema",
      "SchemaCli.getSchema",
      "SchemaCli.listSchemas",
      "SchemaCli.updateSchema",
      "SchemaService.createSchema",
      "SchemaService.deleteSchema",
      "SchemaService.getSchema",
      "SchemaService.listSchemas",
      "SchemaService.updateSchema",
      "SchemaRepository.createSchema",
      "SchemaRepository.deleteSchema",
      "SchemaRepository.getSchema",
      "SchemaRepository.listSchemas",
      "SchemaRepository.updateSchema"
    ],
    "order": 1,
    "explanation": [
      "The document is an API endpoint summary table that lists the methods available and their description under the SchemasApi. Each code is related to one of the methods."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split focuses on the createSchema endpoint details and meets all criteria. Independent Understanding: Complete documentation for the createSchema operation. Focus Clarity: Single focus on schema creation endpoint. Traceability Specificity: Clear links to specific models (CreateSchema, SchemaInfo) and endpoint definition. Atomic Traceability: Contains all necessary information for this specific operation.",
    "concepts": [
      "SchemaCli.createSchema",
      "SchemaService.createSchema",
      "SchemaRepository.createSchema",
      "SchemaInfoDAO"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the createSchema method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split details the deleteSchema endpoint and meets all criteria. Independent Understanding: Complete documentation for the deleteSchema operation. Focus Clarity: Single focus on schema deletion endpoint. Traceability Specificity: Clear parameter definitions and return type. Atomic Traceability: Contains all necessary information for this specific operation.",
    "concepts": [
      "SchemaCli.deleteSchema",
      "SchemaService.deleteSchema",
      "SchemaRepository.deleteSchema"
    ],
    "order": 3,
    "explanation": [
      "The document explains what the deleteSchema method does."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split focuses on the getSchema endpoint and meets all criteria. Independent Understanding: Complete documentation for the getSchema operation. Focus Clarity: Single focus on schema retrieval endpoint. Traceability Specificity: Clear parameter definition and return type (SchemaInfo). Atomic Traceability: Contains all necessary information for this specific operation.",
    "concepts": [
      "SchemaCli.getSchema",
      "SchemaService.getSchema",
      "SchemaRepository.getSchema",
      "SchemaInfoDAO"
    ],
    "order": 4,
    "explanation": [
      "The document explains what the getSchema method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split details the listSchemas endpoint and meets all criteria. Independent Understanding: Complete documentation for the listSchemas operation. Focus Clarity: Single focus on schema listing endpoint. Traceability Specificity: Clear parameter definitions and return type (ListSchemasResponse). Atomic Traceability: Contains all necessary information for this specific operation.",
    "concepts": [
      "SchemaCli.listSchemas",
      "SchemaService.listSchemas",
      "SchemaRepository.listSchemas"
    ],
    "order": 5,
    "explanation": [
      "The document explains what the listSchemas method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/SchemasApi.md",
    "split_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split focuses on the updateSchema endpoint and meets all criteria. Independent Understanding: Complete documentation for the updateSchema operation. Focus Clarity: Single focus on schema update endpoint. Traceability Specificity: Clear links to specific models (UpdateSchema, SchemaInfo) and parameters. Atomic Traceability: Contains all necessary information for this specific operation.",
    "concepts": [
      "SchemaCli.updateSchema",
      "SchemaService.updateSchema",
      "SchemaRepository.updateSchema",
      "SchemaInfoDAO"
    ],
    "order": 6,
    "explanation": [
      "The document explains what the updateSchema method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It provides a complete and independently understandable overview of the Volumes API endpoints, 2) Has a single clear focus on listing available API methods, 3) Has specific traceability to the API endpoints and HTTP methods, 4) Cannot be meaningfully split further while maintaining a complete API overview.",
    "concepts": [
      "VolumeCli.createVolume",
      "VolumeCli.deleteVolume",
      "VolumeCli.getVolume",
      "VolumeCli.listVolumes",
      "VolumeCli.updateVolume",
      "VolumeService.createVolume",
      "VolumeService.deleteVolume",
      "VolumeService.getVolume",
      "VolumeService.listVolumes",
      "VolumeService.updateVolume",
      "VolumeRepository.createVolume",
      "VolumeRepository.deleteVolume",
      "VolumeRepository.getVolume",
      "VolumeRepository.listVolumes",
      "VolumeRepository.updateVolume"
    ],
    "order": 1,
    "explanation": [
      "The document is an API endpoint summary table that lists the methods available and their description under the VolumesApi. Each code is related to one of the methods."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It contains complete, independently understandable documentation for the createVolume endpoint, 2) Has a single clear focus on the create operation, 3) Has specific traceability to the createVolume method and its parameters/return types, 4) Represents the smallest complete unit for this endpoint's documentation.",
    "concepts": [
      "VolumeCli.createVolume",
      "VolumeService.createVolume",
      "VolumeRepository.createVolume",
      "VolumeInfoDAO"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the createVolume method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It contains complete, independently understandable documentation for the deleteVolume endpoint, 2) Has a single clear focus on the delete operation, 3) Has specific traceability to the deleteVolume method and its parameters/return types, 4) Represents the smallest complete unit for this endpoint's documentation.",
    "concepts": [
      "VolumeCli.deleteVolume",
      "VolumeService.deleteVolume",
      "VolumeRepository.deleteVolume"
    ],
    "order": 3,
    "explanation": [
      "The document explains what the deleteVolume method does."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It contains complete, independently understandable documentation for the getVolume endpoint, 2) Has a single clear focus on the get operation, 3) Has specific traceability to the getVolume method and its parameters/return types, 4) Represents the smallest complete unit for this endpoint's documentation.",
    "concepts": [
      "VolumeCli.getVolume",
      "VolumeService.getVolume",
      "VolumeRepository.getVolume",
      "VolumeInfoDAO"
    ],
    "order": 4,
    "explanation": [
      "The document explains what the getVolume method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It contains complete, independently understandable documentation for the listVolumes endpoint, 2) Has a single clear focus on the list operation, 3) Has specific traceability to the listVolumes method and its parameters/return types, 4) Represents the smallest complete unit for this endpoint's documentation.",
    "concepts": [
      "VolumeCli.listVolumes",
      "VolumeService.listVolumes",
      "VolumeRepository.listVolumes"
    ],
    "order": 5,
    "explanation": [
      "The document explains what the listVolumes method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/VolumesApi.md",
    "split_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It contains complete, independently understandable documentation for the updateVolume endpoint, 2) Has a single clear focus on the update operation, 3) Has specific traceability to the updateVolume method and its parameters/return types, 4) Represents the smallest complete unit for this endpoint's documentation.",
    "concepts": [
      "VolumeCli.updateVolume",
      "VolumeService.updateVolume",
      "VolumeRepository.updateVolume",
      "VolumeInfoDAO"
    ],
    "order": 6,
    "explanation": [
      "The document explains what the updateVolume method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/TemporaryVolumeCredentialsApi.md",
    "split_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - It clearly introduces the API endpoint and its base URI, 2) Focus Clarity - It focuses on the single API endpoint definition, 3) Traceability Specificity - It links directly to the generateTemporaryVolumeCredentials endpoint, 4) Atomic Traceability - This is the smallest coherent unit that maintains the API endpoint introduction.",
    "concepts": [
      "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials"
    ],
    "order": 1,
    "explanation": [
      "The document explains the TemporaryVolumeCredentialsApi and the available method under it."
    ]
  },
  {
    "file_location": "api/Apis/TemporaryVolumeCredentialsApi.md",
    "split_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - It provides complete documentation for the API endpoint including parameters, return type, and headers, 2) Focus Clarity - It focuses solely on the generateTemporaryVolumeCredentials endpoint details, 3) Traceability Specificity - It clearly references the specific models and endpoints involved, 4) Atomic Traceability - Contains the complete, minimal set of information needed to understand the endpoint implementation.",
    "concepts": [
      "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the generateTemporaryVolumeCredentials method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/TemporaryTableCredentialsApi.md",
    "split_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) It is independently understandable as an API endpoint overview 2) Has a single focus on the temporary table credentials API 3) Has clear traceability to the generateTemporaryTableCredentials endpoint 4) Represents the minimal complete unit that maintains the API endpoint information",
    "concepts": [
      "TemporaryTableCredentialsService.generateTemporaryTableCredentials"
    ],
    "order": 1,
    "explanation": [
      "The document explains the TemporaryTableCredentialsApi and the available method under it."
    ]
  },
  {
    "file_location": "api/Apis/TemporaryTableCredentialsApi.md",
    "split_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
    "met_criteria": true,
    "justification": "This split satisfies all criteria: 1) It contains complete, independently understandable API method documentation 2) Has a single focus on the generateTemporaryTableCredentials operation 3) Has clear traceability to the method, its parameters, return type and related models 4) Is the minimal unit that maintains complete method documentation",
    "concepts": [
      "TemporaryTableCredentialsService.generateTemporaryTableCredentials"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the generateTemporaryTableCredentials method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/TablesApi.md",
    "split_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The API endpoint overview table is self-contained and can be understood independently. 2) Focus Clarity: It has a single focus of presenting the available table API endpoints. 3) Traceability Specificity: Maps directly to the TablesApi endpoints. 4) Atomic Traceability: Contains the minimal complete set of API endpoint definitions.",
    "concepts": [
      "TableCli.createTable",
      "TableCli.deleteTable",
      "TableCli.getTable",
      "TableCli.listTables",
      "TableService.createTable",
      "TableService.deleteTable",
      "TableService.getTable",
      "TableService.listTables",
      "TableRepository.createTable",
      "TableRepository.deleteTable",
      "TableRepository.getTable",
      "TableRepository.listTables"
    ],
    "order": 1,
    "explanation": [
      "The document is an API endpoint summary table that lists the methods available and their description under the TablesApi. Each code is related to one of the methods."
    ]
  },
  {
    "file_location": "api/Apis/TablesApi.md",
    "split_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The createTable endpoint documentation is self-contained with complete parameter and return type information. 2) Focus Clarity: Focuses solely on the createTable operation. 3) Traceability Specificity: Maps directly to the createTable endpoint implementation. 4) Atomic Traceability: Contains the minimal complete documentation for this specific endpoint.",
    "concepts": [
      "TableCli.createTable",
      "TableService.createTable",
      "TableRepository.createTable",
      "TableInfoDAO"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the createTable method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/TablesApi.md",
    "split_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The deleteTable endpoint documentation is self-contained with complete parameter and return type information. 2) Focus Clarity: Focuses solely on the deleteTable operation. 3) Traceability Specificity: Maps directly to the deleteTable endpoint implementation. 4) Atomic Traceability: Contains the minimal complete documentation for this specific endpoint.",
    "concepts": [
      "TableCli.deleteTable",
      "TableService.deleteTable",
      "TableRepository.deleteTable"
    ],
    "order": 3,
    "explanation": [
      "The document explains what the deleteTable method does."
    ]
  },
  {
    "file_location": "api/Apis/TablesApi.md",
    "split_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The getTable endpoint documentation is self-contained with complete parameter and return type information. 2) Focus Clarity: Focuses solely on the getTable operation. 3) Traceability Specificity: Maps directly to the getTable endpoint implementation. 4) Atomic Traceability: Contains the minimal complete documentation for this specific endpoint.",
    "concepts": [
      "TableCli.getTable",
      "TableService.getTable",
      "TableRepository.getTable",
      "TableInfoDAO"
    ],
    "order": 4,
    "explanation": [
      "The document explains what the getTable method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/TablesApi.md",
    "split_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding: The listTables endpoint documentation is self-contained with complete parameter and return type information. 2) Focus Clarity: Focuses solely on the listTables operation and its pagination behavior. 3) Traceability Specificity: Maps directly to the listTables endpoint implementation. 4) Atomic Traceability: Contains the minimal complete documentation for this specific endpoint.",
    "concepts": [
      "TableCli.listTables",
      "TableService.listTables",
      "TableRepository.listTables"
    ],
    "order": 5,
    "explanation": [
      "The document explains what the listTables method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/FunctionsApi.md",
    "split_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - Provides a complete overview of the FunctionsApi endpoints that can be understood independently, 2) Focus Clarity - Has a single focus on listing all available Function API endpoints, 3) Traceability Specificity - Clearly links to specific API endpoints and their HTTP methods, 4) Atomic Traceability - Contains the minimal complete set of API endpoints without additional implementation details",
    "concepts": [
      "FunctionCli.createFunction",
      "FunctionCli.deleteFunction",
      "FunctionCli.getFunction",
      "FunctionCli.listFunctions",
      "FunctionService.createFunction",
      "FunctionService.deleteFunction",
      "FunctionService.getFunction",
      "FunctionService.listFunctions",
      "FunctionRepository.createFunction",
      "FunctionRepository.deleteFunction",
      "FunctionRepository.getFunction",
      "FunctionRepository.listFunctions"
    ],
    "order": 1,
    "explanation": [
      "The document is an API endpoint summary table that lists the methods available and their description under the FunctionsApi. Each code is related to one of the methods."
    ]
  },
  {
    "file_location": "api/Apis/FunctionsApi.md",
    "split_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - Provides complete documentation for the createFunction endpoint that can be understood on its own, 2) Focus Clarity - Focuses specifically on the createFunction operation, 3) Traceability Specificity - Links directly to specific request/response models and clearly defines the API contract, 4) Atomic Traceability - Contains the minimal complete set of information needed to understand and use the createFunction endpoint",
    "concepts": [
      "FunctionCli.createFunction",
      "FunctionService.createFunction",
      "FunctionRepository.createFunction",
      "FunctionInfoDAO"
    ],
    "order": 2,
    "explanation": [
      "The document explains what the createFunction method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/FunctionsApi.md",
    "split_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - Provides complete documentation for the deleteFunction endpoint that can be understood independently, 2) Focus Clarity - Focuses specifically on the deleteFunction operation, 3) Traceability Specificity - Clearly defines the API parameters and response type, 4) Atomic Traceability - Contains the minimal complete set of information needed to understand and use the deleteFunction endpoint",
    "concepts": [
      "FunctionCli.deleteFunction",
      "FunctionService.deleteFunction",
      "FunctionRepository.deleteFunction"
    ],
    "order": 3,
    "explanation": [
      "The document explains what the deleteFunction method does."
    ]
  },
  {
    "file_location": "api/Apis/FunctionsApi.md",
    "split_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - Provides complete documentation for the getFunction endpoint that can be understood on its own, 2) Focus Clarity - Focuses specifically on the getFunction operation, 3) Traceability Specificity - Clearly defines the API parameters and response type, 4) Atomic Traceability - Contains the minimal complete set of information needed to understand and use the getFunction endpoint",
    "concepts": [
      "FunctionCli.getFunction",
      "FunctionService.getFunction",
      "FunctionRepository.getFunction",
      "FunctionInfoDAO"
    ],
    "order": 4,
    "explanation": [
      "The document explains what the getFunction method does. It also shows the return type expected."
    ]
  },
  {
    "file_location": "api/Apis/FunctionsApi.md",
    "split_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
    "met_criteria": true,
    "justification": "This split meets all criteria: 1) Independent Understanding - Provides complete documentation for the listFunctions endpoint that can be understood independently, 2) Focus Clarity - Focuses specifically on the listFunctions operation with clear pagination parameters, 3) Traceability Specificity - Clearly defines all API parameters and response type, 4) Atomic Traceability - Contains the minimal complete set of information needed to understand and use the listFunctions endpoint",
    "concepts": [
      "FunctionCli.listFunctions",
      "FunctionService.listFunctions",
      "FunctionRepository.listFunctions"
    ],
    "order": 5,
    "explanation": [
      "The document explains what the listFunctions method does. It also shows the return type expected."
    ]
  }
]