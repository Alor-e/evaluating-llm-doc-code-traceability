{
  "dataset": "unity_catalog",
  "runs": [
    {
      "run_id": 1,
      "timestamp": "2025-02-12T08:08:37.124953",
      "negative_results": [
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The code implements the documented listCatalogs endpoint by using database transactions and pagination logic to retrieve catalog records from storage, transform them into CatalogInfo objects with attached properties, and return them in a ListCatalogsResponse with the next page token.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and model conversion methods (toVolumeInfo/from) needed to support the documented getVolume API endpoint by mapping between the database representation and the VolumeInfo response type.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.listFunctions",
          "ground_truth_relationship": "The FunctionRepository.listFunctions code implements the backend logic for the GET /functions API endpoint, handling pagination through maxResults and pageToken parameters while retrieving function metadata from a database session and transforming it into the API response format.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.listFunctions -> FunctionRepository.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.getFunction",
          "ground_truth_relationship": "The FunctionRepository.getFunction method implements the backend logic for the GET /functions/{name} API endpoint by retrieving a function's details from the database based on its fully qualified name split into catalog, schema, and function components.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.getFunction -> FunctionRepository.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.deleteFunction",
          "ground_truth_relationship": "The FunctionRepository.deleteFunction method implements the DELETE /functions/{name} API endpoint by validating a three-part function name (catalog.schema.function), checking for schema existence, and permanently removing the function from the database within a transaction.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.deleteFunction -> FunctionRepository.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.createFunction",
          "ground_truth_relationship": "This code implements the experimental POST /functions endpoint by creating a new function with extensive metadata including UUID, name, catalog, schema, and parameters, while validating uniqueness and schema existence in the database.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.createFunction -> FunctionRepository.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the data persistence layer that enables the documented getFunction endpoint by mapping database records to FunctionInfo objects through JPA annotations and conversion methods toFunctionInfo() and from().",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.listVolumes",
          "ground_truth_relationship": "The listVolumes method implements the GET /volumes API endpoint by querying the database for volumes within a specified schema, supporting pagination through maxResults and pageToken parameters, and returning the results as a ListVolumesResponseContent object.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.listVolumes -> VolumeRepository.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.getVolume",
          "ground_truth_relationship": "The VolumeRepository.getVolume method implements the GET /volumes/{name} endpoint by parsing a three-part volume name (catalog.schema.volume), retrieving the volume data from a database session, and returning a VolumeInfo object that represents the requested volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.getVolume -> VolumeRepository.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.createVolume",
          "ground_truth_relationship": "The VolumeRepository.createVolume method implements the POST /volumes API endpoint by validating the request, creating a new volume record with generated UUID and metadata, and persisting it to the database while enforcing schema existence and volume uniqueness constraints.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume -> VolumeRepository.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.deleteVolume",
          "ground_truth_relationship": "The deleteVolume method in VolumeRepository implements the DELETE /volumes/{name} API endpoint by parsing the three-part volume name (catalog.schema.volume), validating the schema exists, and removing both the volume's metadata from the database and its storage directory if it's a managed volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.deleteVolume -> VolumeRepository.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.updateVolume",
          "ground_truth_relationship": "The VolumeRepository.updateVolume method implements the PATCH /volumes/{name} API endpoint by validating input parameters, managing database transactions, and performing volume updates including name and comment changes while handling potential conflicts and exceptions.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume -> VolumeRepository.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and object mapping functionality needed to support the updateSchema API endpoint by managing schema metadata in the database and converting between SchemaInfo API objects and database entities.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the persistence layer mapping and conversion logic for the TableInfo objects returned by the documented createTable API endpoint, handling the storage and retrieval of table metadata in the 'uc_tables' database table.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the database persistence layer and object mapping functionality that enables the createFunction API endpoint to store and retrieve function metadata in the uc_functions table, converting between the API's FunctionInfo model and its database representation.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the data persistence layer and model conversion methods that enable the documented getTable API endpoint to retrieve and return table information in the expected TableInfo format.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.createSchema",
          "ground_truth_relationship": "The SchemaRepository.createSchema method implements the backend logic for the POST /schemas endpoint by validating the schema name, checking for duplicates, creating a new SchemaInfo object with a UUID, persisting it to the database within a transaction, and returning the created schema details.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.createSchema -> SchemaRepository.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.getSchema",
          "ground_truth_relationship": "The SchemaRepository.getSchema method implements the GET /schemas/{full_name} API endpoint by retrieving schema information from a database, converting it from DAO format, and attaching properties while managing database transactions.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.getSchema -> SchemaRepository.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.listSchemas",
          "ground_truth_relationship": "The code implements the GET /schemas endpoint by retrieving schemas from a database session, supporting pagination through maxResults and pageToken parameters, and returning a ListSchemasResponse containing schema information and a next page token.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.listSchemas -> SchemaRepository.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.updateSchema",
          "ground_truth_relationship": "The SchemaRepository.updateSchema method implements the PATCH /schemas/{full_name} API endpoint by handling the validation, modification, and persistence of schema updates including name changes, comments, and properties within a database transaction.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.updateSchema -> SchemaRepository.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The SchemaRepository.deleteSchema method implements the DELETE /schemas/{full_name} API endpoint by handling schema deletion logic, including processing child tables, volumes, and functions, and removing associated properties from the database session.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and mapping functionality for the createVolume API endpoint by defining the database schema and conversion methods between the API's VolumeInfo model and the database representation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class implements the data persistence layer for volumes, with fields and conversion methods that match the VolumeInfo structure referenced in the updateVolume API documentation, particularly supporting the comment and name fields that are marked as updatable in the documentation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence and transformation layer for the SchemaInfo object that is returned by the documented getSchema endpoint, handling the mapping between database records and the API response model.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The deleteTable method implements the DELETE /tables/{full_name} API endpoint's backend logic by removing the table's metadata from the session, cleaning up associated properties, and deleting the physical directory for managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.listTables",
          "ground_truth_relationship": "The TableRepository.listTables code implements the GET /tables REST API endpoint by querying tables from a database session, applying pagination through maxResults and pageToken parameters, and returning a ListTablesResponse containing table information with optional properties and columns.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.listTables -> TableRepository.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.getTable",
          "ground_truth_relationship": "The TableRepository.getTable method implements the backend database logic for the GET /tables/{full_name} API endpoint, retrieving a table's details from the database by parsing the full_name parameter into catalog, schema and table components and returning a TableInfo object with attached properties.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.getTable -> TableRepository.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.createTable",
          "ground_truth_relationship": "The TableRepository.createTable method implements the backend logic for the experimental POST /tables API endpoint, handling table creation with validations for SQL object names, schema existence, and storage location requirements while preventing creation of managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable -> TableRepository.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented createCatalog API endpoint, with methods to convert between the DAO and API model representations.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and conversion methods (from/toSchemaInfo) that enable storing and retrieving the SchemaInfo objects that are returned by the documented createSchema API endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The code directly implements the documented getCatalog operation by querying the database for a CatalogInfoDAO entity matching the specified name parameter using Hibernate's query language and returning a single result.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented getCatalog endpoint through its toCatalogInfo() conversion method.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class supports the updateCatalog endpoint by providing the data persistence layer and mapping functions (from/toCatalogInfo) that convert between the API's CatalogInfo model and the database entity representation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The CatalogRepository.listCatalogs method implements the GET /catalogs endpoint by providing paginated retrieval of catalog information from the database, with support for maxResults and pageToken parameters.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The getCatalogDAO method implements the database query layer for the GET /catalogs/{name} API endpoint by retrieving a single CatalogInfoDAO record matching the specified catalog name from the database session.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.deleteCatalog",
          "ground_truth_relationship": "The deleteCatalog method implements the DELETE /catalogs/{name} API endpoint by handling catalog deletion with schema cleanup, supporting forced deletion via a boolean parameter, and providing appropriate error responses for non-existent catalogs or catalogs with schemas.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.deleteCatalog -> CatalogRepository.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.addCatalog",
          "ground_truth_relationship": "The CatalogRepository.addCatalog method implements the backend persistence logic for the POST /catalogs API endpoint, handling the creation of a new catalog with validation, transaction management, and database persistence of the catalog metadata and its properties.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.createCatalog -> CatalogRepository.addCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.updateCatalog",
          "ground_truth_relationship": "The CatalogRepository.updateCatalog method implements the PATCH /catalogs/{name} endpoint by handling catalog updates including name changes, comments, and properties while managing database transactions and validation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.updateCatalog -> CatalogRepository.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        }
      ]
    },
    {
      "run_id": 2,
      "timestamp": "2025-02-12T14:40:40.207949",
      "negative_results": [
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the data persistence layer that enables the documented getFunction endpoint by mapping database records to FunctionInfo objects through JPA annotations and conversion methods toFunctionInfo() and from().",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and model conversion methods (toVolumeInfo/from) needed to support the documented getVolume API endpoint by mapping between the database representation and the VolumeInfo response type.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented createCatalog API endpoint, with methods to convert between the DAO and API model representations.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The code implements the documented table deletion operation by removing the table's database entry, deleting its physical files (for managed tables), and cleaning up associated properties, while the documentation describes the API endpoint that exposes this functionality with a 'full_name' parameter.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class implements the data persistence layer for volumes, with fields and conversion methods that match the VolumeInfo structure referenced in the updateVolume API documentation, particularly supporting the comment and name fields that are marked as updatable in the documentation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and conversion methods (from/toSchemaInfo) that enable storing and retrieving the SchemaInfo objects that are returned by the documented createSchema API endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and object mapping functionality needed to support the updateSchema API endpoint by managing schema metadata in the database and converting between SchemaInfo API objects and database entities.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the database persistence layer and object mapping functionality that enables the createFunction API endpoint to store and retrieve function metadata in the uc_functions table, converting between the API's FunctionInfo model and its database representation.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented getCatalog endpoint through its toCatalogInfo() conversion method.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The code directly implements the documented getCatalog operation by querying the database for a CatalogInfoDAO entity matching the specified name parameter using Hibernate's query language and returning a single result.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the data persistence layer and model conversion methods that enable the documented getTable API endpoint to retrieve and return table information in the expected TableInfo format.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.getVolume",
          "ground_truth_relationship": "The VolumeRepository.getVolume method implements the GET /volumes/{name} endpoint by parsing a three-part volume name (catalog.schema.volume), retrieving the volume data from a database session, and returning a VolumeInfo object that represents the requested volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.getVolume -> VolumeRepository.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.deleteVolume",
          "ground_truth_relationship": "The deleteVolume method in VolumeRepository implements the DELETE /volumes/{name} API endpoint by parsing the three-part volume name (catalog.schema.volume), validating the schema exists, and removing both the volume's metadata from the database and its storage directory if it's a managed volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.deleteVolume -> VolumeRepository.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.updateVolume",
          "ground_truth_relationship": "The VolumeRepository.updateVolume method implements the PATCH /volumes/{name} API endpoint by validating input parameters, managing database transactions, and performing volume updates including name and comment changes while handling potential conflicts and exceptions.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume -> VolumeRepository.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.createVolume",
          "ground_truth_relationship": "The VolumeRepository.createVolume method implements the POST /volumes API endpoint by validating the request, creating a new volume record with generated UUID and metadata, and persisting it to the database while enforcing schema existence and volume uniqueness constraints.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume -> VolumeRepository.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.listVolumes",
          "ground_truth_relationship": "The listVolumes method implements the GET /volumes API endpoint by querying the database for volumes within a specified schema, supporting pagination through maxResults and pageToken parameters, and returning the results as a ListVolumesResponseContent object.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.listVolumes -> VolumeRepository.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The code implements the documented schema deletion endpoint by recursively removing child tables, volumes, and functions before deleting the schema itself, while respecting the 'force' parameter and throwing a NOT_FOUND exception when the schema doesn't exist.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class supports the updateCatalog endpoint by providing the data persistence layer and mapping functions (from/toCatalogInfo) that convert between the API's CatalogInfo model and the database entity representation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.updateCatalog",
          "ground_truth_relationship": "The CatalogRepository.updateCatalog method implements the PATCH /catalogs/{name} endpoint by handling catalog updates including name changes, comments, and properties while managing database transactions and validation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.updateCatalog -> CatalogRepository.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The CatalogRepository.listCatalogs method implements the GET /catalogs endpoint by providing paginated retrieval of catalog information from the database, with support for maxResults and pageToken parameters.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.deleteCatalog",
          "ground_truth_relationship": "The deleteCatalog method implements the DELETE /catalogs/{name} API endpoint by handling catalog deletion with schema cleanup, supporting forced deletion via a boolean parameter, and providing appropriate error responses for non-existent catalogs or catalogs with schemas.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.deleteCatalog -> CatalogRepository.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The getCatalogDAO method implements the database query layer for the GET /catalogs/{name} API endpoint by retrieving a single CatalogInfoDAO record matching the specified catalog name from the database session.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.addCatalog",
          "ground_truth_relationship": "The CatalogRepository.addCatalog method implements the backend persistence logic for the POST /catalogs API endpoint, handling the creation of a new catalog with validation, transaction management, and database persistence of the catalog metadata and its properties.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.createCatalog -> CatalogRepository.addCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The deleteTable method implements the DELETE /tables/{full_name} API endpoint's backend logic by removing the table's metadata from the session, cleaning up associated properties, and deleting the physical directory for managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.createTable",
          "ground_truth_relationship": "The TableRepository.createTable method implements the backend logic for the experimental POST /tables API endpoint, handling table creation with validations for SQL object names, schema existence, and storage location requirements while preventing creation of managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable -> TableRepository.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.listTables",
          "ground_truth_relationship": "The TableRepository.listTables code implements the GET /tables REST API endpoint by querying tables from a database session, applying pagination through maxResults and pageToken parameters, and returning a ListTablesResponse containing table information with optional properties and columns.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.listTables -> TableRepository.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.getTable",
          "ground_truth_relationship": "The TableRepository.getTable method implements the backend database logic for the GET /tables/{full_name} API endpoint, retrieving a table's details from the database by parsing the full_name parameter into catalog, schema and table components and returning a TableInfo object with attached properties.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.getTable -> TableRepository.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and mapping functionality for the createVolume API endpoint by defining the database schema and conversion methods between the API's VolumeInfo model and the database representation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeService.createVolume",
          "ground_truth_relationship": "The code implements the documented API endpoint by accepting a CreateVolumeRequestContent parameter and returning a JSON HTTP response containing the created volume information, matching the documented input/output specifications and HTTP headers.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.createFunction",
          "ground_truth_relationship": "This code implements the experimental POST /functions endpoint by creating a new function with extensive metadata including UUID, name, catalog, schema, and parameters, while validating uniqueness and schema existence in the database.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.createFunction -> FunctionRepository.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.deleteFunction",
          "ground_truth_relationship": "The FunctionRepository.deleteFunction method implements the DELETE /functions/{name} API endpoint by validating a three-part function name (catalog.schema.function), checking for schema existence, and permanently removing the function from the database within a transaction.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.deleteFunction -> FunctionRepository.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.getFunction",
          "ground_truth_relationship": "The FunctionRepository.getFunction method implements the backend logic for the GET /functions/{name} API endpoint by retrieving a function's details from the database based on its fully qualified name split into catalog, schema, and function components.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.getFunction -> FunctionRepository.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.listFunctions",
          "ground_truth_relationship": "The FunctionRepository.listFunctions code implements the backend logic for the GET /functions API endpoint, handling pagination through maxResults and pageToken parameters while retrieving function metadata from a database session and transforming it into the API response format.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.listFunctions -> FunctionRepository.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the persistence layer mapping and conversion logic for the TableInfo objects returned by the documented createTable API endpoint, handling the storage and retrieval of table metadata in the 'uc_tables' database table.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.getSchema",
          "ground_truth_relationship": "The SchemaRepository.getSchema method implements the GET /schemas/{full_name} API endpoint by retrieving schema information from a database, converting it from DAO format, and attaching properties while managing database transactions.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.getSchema -> SchemaRepository.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.listSchemas",
          "ground_truth_relationship": "The code implements the GET /schemas endpoint by retrieving schemas from a database session, supporting pagination through maxResults and pageToken parameters, and returning a ListSchemasResponse containing schema information and a next page token.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.listSchemas -> SchemaRepository.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.updateSchema",
          "ground_truth_relationship": "The SchemaRepository.updateSchema method implements the PATCH /schemas/{full_name} API endpoint by handling the validation, modification, and persistence of schema updates including name changes, comments, and properties within a database transaction.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.updateSchema -> SchemaRepository.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.createSchema",
          "ground_truth_relationship": "The SchemaRepository.createSchema method implements the backend logic for the POST /schemas endpoint by validating the schema name, checking for duplicates, creating a new SchemaInfo object with a UUID, persisting it to the database within a transaction, and returning the created schema details.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.createSchema -> SchemaRepository.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The SchemaRepository.deleteSchema method implements the DELETE /schemas/{full_name} API endpoint by handling schema deletion logic, including processing child tables, volumes, and functions, and removing associated properties from the database session.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        }
      ]
    },
    {
      "run_id": 3,
      "timestamp": "2025-02-12T14:43:37.878394",
      "negative_results": [
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class supports the updateCatalog endpoint by providing the data persistence layer and mapping functions (from/toCatalogInfo) that convert between the API's CatalogInfo model and the database entity representation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class implements the data persistence layer for volumes, with fields and conversion methods that match the VolumeInfo structure referenced in the updateVolume API documentation, particularly supporting the comment and name fields that are marked as updatable in the documentation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeService.updateVolume",
          "ground_truth_relationship": "The code implements a PATCH endpoint that takes a fully qualified volume name and UpdateVolumeRequestContent object as specified in the documentation, delegating the actual update operation to VOLUME_REPOSITORY and wrapping the returned VolumeInfo in an HTTP response.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and mapping functionality for the createVolume API endpoint by defining the database schema and conversion methods between the API's VolumeInfo model and the database representation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the data persistence layer that enables the documented getFunction endpoint by mapping database records to FunctionInfo objects through JPA annotations and conversion methods toFunctionInfo() and from().",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence and transformation layer for the SchemaInfo object that is returned by the documented getSchema endpoint, handling the mapping between database records and the API response model.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableService.createTable",
          "ground_truth_relationship": "The code implements the documented POST endpoint by accepting a CreateTable request object, validating it's not null, delegating to the TABLE_REPOSITORY to create the table, and returning a TableInfo response wrapped in an HTTP JSON response, matching the documented input/output types and content types.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the persistence layer mapping and conversion logic for the TableInfo objects returned by the documented createTable API endpoint, handling the storage and retrieval of table metadata in the 'uc_tables' database table.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.updateCatalog",
          "ground_truth_relationship": "The CatalogRepository.updateCatalog method implements the PATCH /catalogs/{name} endpoint by handling catalog updates including name changes, comments, and properties while managing database transactions and validation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.updateCatalog -> CatalogRepository.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The CatalogRepository.listCatalogs method implements the GET /catalogs endpoint by providing paginated retrieval of catalog information from the database, with support for maxResults and pageToken parameters.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.deleteCatalog",
          "ground_truth_relationship": "The deleteCatalog method implements the DELETE /catalogs/{name} API endpoint by handling catalog deletion with schema cleanup, supporting forced deletion via a boolean parameter, and providing appropriate error responses for non-existent catalogs or catalogs with schemas.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.deleteCatalog -> CatalogRepository.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The getCatalogDAO method implements the database query layer for the GET /catalogs/{name} API endpoint by retrieving a single CatalogInfoDAO record matching the specified catalog name from the database session.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.addCatalog",
          "ground_truth_relationship": "The CatalogRepository.addCatalog method implements the backend persistence logic for the POST /catalogs API endpoint, handling the creation of a new catalog with validation, transaction management, and database persistence of the catalog metadata and its properties.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.createCatalog -> CatalogRepository.addCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the database persistence layer and object mapping functionality that enables the createFunction API endpoint to store and retrieve function metadata in the uc_functions table, converting between the API's FunctionInfo model and its database representation.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and conversion methods (from/toSchemaInfo) that enable storing and retrieving the SchemaInfo objects that are returned by the documented createSchema API endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the data persistence layer and model conversion methods that enable the documented getTable API endpoint to retrieve and return table information in the expected TableInfo format.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and object mapping functionality needed to support the updateSchema API endpoint by managing schema metadata in the database and converting between SchemaInfo API objects and database entities.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and model conversion methods (toVolumeInfo/from) needed to support the documented getVolume API endpoint by mapping between the database representation and the VolumeInfo response type.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented createCatalog API endpoint, with methods to convert between the DAO and API model representations.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.createFunction",
          "ground_truth_relationship": "This code implements the experimental POST /functions endpoint by creating a new function with extensive metadata including UUID, name, catalog, schema, and parameters, while validating uniqueness and schema existence in the database.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.createFunction -> FunctionRepository.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.deleteFunction",
          "ground_truth_relationship": "The FunctionRepository.deleteFunction method implements the DELETE /functions/{name} API endpoint by validating a three-part function name (catalog.schema.function), checking for schema existence, and permanently removing the function from the database within a transaction.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.deleteFunction -> FunctionRepository.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.getFunction",
          "ground_truth_relationship": "The FunctionRepository.getFunction method implements the backend logic for the GET /functions/{name} API endpoint by retrieving a function's details from the database based on its fully qualified name split into catalog, schema, and function components.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.getFunction -> FunctionRepository.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.listFunctions",
          "ground_truth_relationship": "The FunctionRepository.listFunctions code implements the backend logic for the GET /functions API endpoint, handling pagination through maxResults and pageToken parameters while retrieving function metadata from a database session and transforming it into the API response format.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.listFunctions -> FunctionRepository.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.getSchema",
          "ground_truth_relationship": "The SchemaRepository.getSchema method implements the GET /schemas/{full_name} API endpoint by retrieving schema information from a database, converting it from DAO format, and attaching properties while managing database transactions.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.getSchema -> SchemaRepository.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.listSchemas",
          "ground_truth_relationship": "The code implements the GET /schemas endpoint by retrieving schemas from a database session, supporting pagination through maxResults and pageToken parameters, and returning a ListSchemasResponse containing schema information and a next page token.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.listSchemas -> SchemaRepository.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.updateSchema",
          "ground_truth_relationship": "The SchemaRepository.updateSchema method implements the PATCH /schemas/{full_name} API endpoint by handling the validation, modification, and persistence of schema updates including name changes, comments, and properties within a database transaction.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.updateSchema -> SchemaRepository.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.createSchema",
          "ground_truth_relationship": "The SchemaRepository.createSchema method implements the backend logic for the POST /schemas endpoint by validating the schema name, checking for duplicates, creating a new SchemaInfo object with a UUID, persisting it to the database within a transaction, and returning the created schema details.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.createSchema -> SchemaRepository.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The SchemaRepository.deleteSchema method implements the DELETE /schemas/{full_name} API endpoint by handling schema deletion logic, including processing child tables, volumes, and functions, and removing associated properties from the database session.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.getVolume",
          "ground_truth_relationship": "The VolumeRepository.getVolume method implements the GET /volumes/{name} endpoint by parsing a three-part volume name (catalog.schema.volume), retrieving the volume data from a database session, and returning a VolumeInfo object that represents the requested volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.getVolume -> VolumeRepository.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.deleteVolume",
          "ground_truth_relationship": "The deleteVolume method in VolumeRepository implements the DELETE /volumes/{name} API endpoint by parsing the three-part volume name (catalog.schema.volume), validating the schema exists, and removing both the volume's metadata from the database and its storage directory if it's a managed volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.deleteVolume -> VolumeRepository.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.updateVolume",
          "ground_truth_relationship": "The VolumeRepository.updateVolume method implements the PATCH /volumes/{name} API endpoint by validating input parameters, managing database transactions, and performing volume updates including name and comment changes while handling potential conflicts and exceptions.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume -> VolumeRepository.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.createVolume",
          "ground_truth_relationship": "The VolumeRepository.createVolume method implements the POST /volumes API endpoint by validating the request, creating a new volume record with generated UUID and metadata, and persisting it to the database while enforcing schema existence and volume uniqueness constraints.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume -> VolumeRepository.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.listVolumes",
          "ground_truth_relationship": "The listVolumes method implements the GET /volumes API endpoint by querying the database for volumes within a specified schema, supporting pagination through maxResults and pageToken parameters, and returning the results as a ListVolumesResponseContent object.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.listVolumes -> VolumeRepository.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The deleteTable method implements the DELETE /tables/{full_name} API endpoint's backend logic by removing the table's metadata from the session, cleaning up associated properties, and deleting the physical directory for managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.createTable",
          "ground_truth_relationship": "The TableRepository.createTable method implements the backend logic for the experimental POST /tables API endpoint, handling table creation with validations for SQL object names, schema existence, and storage location requirements while preventing creation of managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable -> TableRepository.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.listTables",
          "ground_truth_relationship": "The TableRepository.listTables code implements the GET /tables REST API endpoint by querying tables from a database session, applying pagination through maxResults and pageToken parameters, and returning a ListTablesResponse containing table information with optional properties and columns.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.listTables -> TableRepository.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.getTable",
          "ground_truth_relationship": "The TableRepository.getTable method implements the backend database logic for the GET /tables/{full_name} API endpoint, retrieving a table's details from the database by parsing the full_name parameter into catalog, schema and table components and returning a TableInfo object with attached properties.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.getTable -> TableRepository.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        }
      ]
    },
    {
      "run_id": 4,
      "timestamp": "2025-02-12T14:45:24.348281",
      "negative_results": [
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and conversion methods (from/toSchemaInfo) that enable storing and retrieving the SchemaInfo objects that are returned by the documented createSchema API endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence and transformation layer for the SchemaInfo object that is returned by the documented getSchema endpoint, handling the mapping between database records and the API response model.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented createCatalog API endpoint, with methods to convert between the DAO and API model representations.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and mapping functionality for the createVolume API endpoint by defining the database schema and conversion methods between the API's VolumeInfo model and the database representation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.getSchema",
          "ground_truth_relationship": "The SchemaRepository.getSchema method implements the GET /schemas/{full_name} API endpoint by retrieving schema information from a database, converting it from DAO format, and attaching properties while managing database transactions.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.getSchema -> SchemaRepository.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.listSchemas",
          "ground_truth_relationship": "The code implements the GET /schemas endpoint by retrieving schemas from a database session, supporting pagination through maxResults and pageToken parameters, and returning a ListSchemasResponse containing schema information and a next page token.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.listSchemas -> SchemaRepository.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.updateSchema",
          "ground_truth_relationship": "The SchemaRepository.updateSchema method implements the PATCH /schemas/{full_name} API endpoint by handling the validation, modification, and persistence of schema updates including name changes, comments, and properties within a database transaction.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.updateSchema -> SchemaRepository.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.createSchema",
          "ground_truth_relationship": "The SchemaRepository.createSchema method implements the backend logic for the POST /schemas endpoint by validating the schema name, checking for duplicates, creating a new SchemaInfo object with a UUID, persisting it to the database within a transaction, and returning the created schema details.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.createSchema -> SchemaRepository.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The SchemaRepository.deleteSchema method implements the DELETE /schemas/{full_name} API endpoint by handling schema deletion logic, including processing child tables, volumes, and functions, and removing associated properties from the database session.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class supports the updateCatalog endpoint by providing the data persistence layer and mapping functions (from/toCatalogInfo) that convert between the API's CatalogInfo model and the database entity representation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the data persistence layer that enables the documented getFunction endpoint by mapping database records to FunctionInfo objects through JPA annotations and conversion methods toFunctionInfo() and from().",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the data persistence layer and model conversion methods that enable the documented getTable API endpoint to retrieve and return table information in the expected TableInfo format.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class implements the data persistence layer for volumes, with fields and conversion methods that match the VolumeInfo structure referenced in the updateVolume API documentation, particularly supporting the comment and name fields that are marked as updatable in the documentation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The deleteTable method implements the DELETE /tables/{full_name} API endpoint's backend logic by removing the table's metadata from the session, cleaning up associated properties, and deleting the physical directory for managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.createTable",
          "ground_truth_relationship": "The TableRepository.createTable method implements the backend logic for the experimental POST /tables API endpoint, handling table creation with validations for SQL object names, schema existence, and storage location requirements while preventing creation of managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable -> TableRepository.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.listTables",
          "ground_truth_relationship": "The TableRepository.listTables code implements the GET /tables REST API endpoint by querying tables from a database session, applying pagination through maxResults and pageToken parameters, and returning a ListTablesResponse containing table information with optional properties and columns.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.listTables -> TableRepository.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.getTable",
          "ground_truth_relationship": "The TableRepository.getTable method implements the backend database logic for the GET /tables/{full_name} API endpoint, retrieving a table's details from the database by parsing the full_name parameter into catalog, schema and table components and returning a TableInfo object with attached properties.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.getTable -> TableRepository.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.getVolume",
          "ground_truth_relationship": "The VolumeRepository.getVolume method implements the GET /volumes/{name} endpoint by parsing a three-part volume name (catalog.schema.volume), retrieving the volume data from a database session, and returning a VolumeInfo object that represents the requested volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.getVolume -> VolumeRepository.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.deleteVolume",
          "ground_truth_relationship": "The deleteVolume method in VolumeRepository implements the DELETE /volumes/{name} API endpoint by parsing the three-part volume name (catalog.schema.volume), validating the schema exists, and removing both the volume's metadata from the database and its storage directory if it's a managed volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.deleteVolume -> VolumeRepository.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.updateVolume",
          "ground_truth_relationship": "The VolumeRepository.updateVolume method implements the PATCH /volumes/{name} API endpoint by validating input parameters, managing database transactions, and performing volume updates including name and comment changes while handling potential conflicts and exceptions.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume -> VolumeRepository.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.createVolume",
          "ground_truth_relationship": "The VolumeRepository.createVolume method implements the POST /volumes API endpoint by validating the request, creating a new volume record with generated UUID and metadata, and persisting it to the database while enforcing schema existence and volume uniqueness constraints.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume -> VolumeRepository.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.listVolumes",
          "ground_truth_relationship": "The listVolumes method implements the GET /volumes API endpoint by querying the database for volumes within a specified schema, supporting pagination through maxResults and pageToken parameters, and returning the results as a ListVolumesResponseContent object.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.listVolumes -> VolumeRepository.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and object mapping functionality needed to support the updateSchema API endpoint by managing schema metadata in the database and converting between SchemaInfo API objects and database entities.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.createFunction",
          "ground_truth_relationship": "This code implements the experimental POST /functions endpoint by creating a new function with extensive metadata including UUID, name, catalog, schema, and parameters, while validating uniqueness and schema existence in the database.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.createFunction -> FunctionRepository.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.deleteFunction",
          "ground_truth_relationship": "The FunctionRepository.deleteFunction method implements the DELETE /functions/{name} API endpoint by validating a three-part function name (catalog.schema.function), checking for schema existence, and permanently removing the function from the database within a transaction.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.deleteFunction -> FunctionRepository.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.getFunction",
          "ground_truth_relationship": "The FunctionRepository.getFunction method implements the backend logic for the GET /functions/{name} API endpoint by retrieving a function's details from the database based on its fully qualified name split into catalog, schema, and function components.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.getFunction -> FunctionRepository.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.listFunctions",
          "ground_truth_relationship": "The FunctionRepository.listFunctions code implements the backend logic for the GET /functions API endpoint, handling pagination through maxResults and pageToken parameters while retrieving function metadata from a database session and transforming it into the API response format.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.listFunctions -> FunctionRepository.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The code directly implements the documented getCatalog operation by querying the database for a CatalogInfoDAO entity matching the specified name parameter using Hibernate's query language and returning a single result.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the persistence layer mapping and conversion logic for the TableInfo objects returned by the documented createTable API endpoint, handling the storage and retrieval of table metadata in the 'uc_tables' database table.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.updateCatalog",
          "ground_truth_relationship": "The CatalogRepository.updateCatalog method implements the PATCH /catalogs/{name} endpoint by handling catalog updates including name changes, comments, and properties while managing database transactions and validation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.updateCatalog -> CatalogRepository.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The CatalogRepository.listCatalogs method implements the GET /catalogs endpoint by providing paginated retrieval of catalog information from the database, with support for maxResults and pageToken parameters.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.deleteCatalog",
          "ground_truth_relationship": "The deleteCatalog method implements the DELETE /catalogs/{name} API endpoint by handling catalog deletion with schema cleanup, supporting forced deletion via a boolean parameter, and providing appropriate error responses for non-existent catalogs or catalogs with schemas.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.deleteCatalog -> CatalogRepository.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The getCatalogDAO method implements the database query layer for the GET /catalogs/{name} API endpoint by retrieving a single CatalogInfoDAO record matching the specified catalog name from the database session.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.addCatalog",
          "ground_truth_relationship": "The CatalogRepository.addCatalog method implements the backend persistence logic for the POST /catalogs API endpoint, handling the creation of a new catalog with validation, transaction management, and database persistence of the catalog metadata and its properties.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.createCatalog -> CatalogRepository.addCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the database persistence layer and object mapping functionality that enables the createFunction API endpoint to store and retrieve function metadata in the uc_functions table, converting between the API's FunctionInfo model and its database representation.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        }
      ]
    },
    {
      "run_id": 5,
      "timestamp": "2025-02-12T14:48:17.765827",
      "negative_results": [
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.deleteTable",
          "ground_truth_relationship": "The deleteTable method implements the DELETE /tables/{full_name} API endpoint's backend logic by removing the table's metadata from the session, cleaning up associated properties, and deleting the physical directory for managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.deleteTable -> TableRepository.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.listTables",
          "ground_truth_relationship": "The TableRepository.listTables code implements the GET /tables REST API endpoint by querying tables from a database session, applying pagination through maxResults and pageToken parameters, and returning a ListTablesResponse containing table information with optional properties and columns.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.listTables -> TableRepository.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.createTable",
          "ground_truth_relationship": "The TableRepository.createTable method implements the backend logic for the experimental POST /tables API endpoint, handling table creation with validations for SQL object names, schema existence, and storage location requirements while preventing creation of managed tables.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.createTable -> TableRepository.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableRepository.getTable",
          "ground_truth_relationship": "The TableRepository.getTable method implements the backend database logic for the GET /tables/{full_name} API endpoint, retrieving a table's details from the database by parsing the full_name parameter into catalog, schema and table components and returning a TableInfo object with attached properties.",
          "ground_truth_trace_chain": "TablesApi.md -> TableService.getTable -> TableRepository.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and object mapping functionality needed to support the updateSchema API endpoint by managing schema metadata in the database and converting between SchemaInfo API objects and database entities.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.createTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.createTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the persistence layer mapping and conversion logic for the TableInfo objects returned by the documented createTable API endpoint, handling the storage and retrieval of table metadata in the 'uc_tables' database table.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.getSchema",
          "ground_truth_relationship": "The SchemaRepository.getSchema method implements the GET /schemas/{full_name} API endpoint by retrieving schema information from a database, converting it from DAO format, and attaching properties while managing database transactions.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.getSchema -> SchemaRepository.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.createSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.listSchemas",
          "ground_truth_relationship": "The code implements the GET /schemas endpoint by retrieving schemas from a database session, supporting pagination through maxResults and pageToken parameters, and returning a ListSchemasResponse containing schema information and a next page token.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.listSchemas -> SchemaRepository.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.updateSchema",
          "ground_truth_relationship": "The SchemaRepository.updateSchema method implements the PATCH /schemas/{full_name} API endpoint by handling the validation, modification, and persistence of schema updates including name changes, comments, and properties within a database transaction.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.updateSchema -> SchemaRepository.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.createSchema",
          "ground_truth_relationship": "The SchemaRepository.createSchema method implements the backend logic for the POST /schemas endpoint by validating the schema name, checking for duplicates, creating a new SchemaInfo object with a UUID, persisting it to the database within a transaction, and returning the created schema details.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.createSchema -> SchemaRepository.createSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaRepository.deleteSchema",
          "ground_truth_relationship": "The SchemaRepository.deleteSchema method implements the DELETE /schemas/{full_name} API endpoint by handling schema deletion logic, including processing child tables, volumes, and functions, and removing associated properties from the database session.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaService.deleteSchema -> SchemaRepository.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.listSchemas",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listSchemas endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.listSchemas",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.updateSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.updateSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.listTables",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listTables endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.listTables",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.createFunction",
          "ground_truth_relationship": "This code implements the experimental POST /functions endpoint by creating a new function with extensive metadata including UUID, name, catalog, schema, and parameters, while validating uniqueness and schema existence in the database.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.createFunction -> FunctionRepository.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.deleteFunction",
          "ground_truth_relationship": "The FunctionRepository.deleteFunction method implements the DELETE /functions/{name} API endpoint by validating a three-part function name (catalog.schema.function), checking for schema existence, and permanently removing the function from the database within a transaction.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.deleteFunction -> FunctionRepository.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.getFunction",
          "ground_truth_relationship": "The FunctionRepository.getFunction method implements the backend logic for the GET /functions/{name} API endpoint by retrieving a function's details from the database based on its fully qualified name split into catalog, schema, and function components.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.getFunction -> FunctionRepository.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionRepository.listFunctions",
          "ground_truth_relationship": "The FunctionRepository.listFunctions code implements the backend logic for the GET /functions API endpoint, handling pagination through maxResults and pageToken parameters while retrieving function metadata from a database session and transforming it into the API response format.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionService.listFunctions -> FunctionRepository.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.getVolume",
          "ground_truth_relationship": "The VolumeRepository.getVolume method implements the GET /volumes/{name} endpoint by parsing a three-part volume name (catalog.schema.volume), retrieving the volume data from a database session, and returning a VolumeInfo object that represents the requested volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.getVolume -> VolumeRepository.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.deleteVolume",
          "ground_truth_relationship": "The deleteVolume method in VolumeRepository implements the DELETE /volumes/{name} API endpoint by parsing the three-part volume name (catalog.schema.volume), validating the schema exists, and removing both the volume's metadata from the database and its storage directory if it's a managed volume.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.deleteVolume -> VolumeRepository.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.createVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.listVolumes",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listVolumes endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.updateVolume",
          "ground_truth_relationship": "The VolumeRepository.updateVolume method implements the PATCH /volumes/{name} API endpoint by validating input parameters, managing database transactions, and performing volume updates including name and comment changes while handling potential conflicts and exceptions.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.updateVolume -> VolumeRepository.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.createVolume",
          "ground_truth_relationship": "The VolumeRepository.createVolume method implements the POST /volumes API endpoint by validating the request, creating a new volume record with generated UUID and metadata, and persisting it to the database while enforcing schema existence and volume uniqueness constraints.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.createVolume -> VolumeRepository.createVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeRepository.listVolumes",
          "ground_truth_relationship": "The listVolumes method implements the GET /volumes API endpoint by querying the database for volumes within a specified schema, supporting pagination through maxResults and pageToken parameters, and returning the results as a ListVolumesResponseContent object.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeService.listVolumes -> VolumeRepository.listVolumes",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented createCatalog API endpoint, with methods to convert between the DAO and API model representations.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.deleteTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.deleteTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.createFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.createFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the database persistence layer and object mapping functionality that enables the createFunction API endpoint to store and retrieve function metadata in the uc_functions table, converting between the API's FunctionInfo model and its database representation.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence layer and conversion methods (from/toSchemaInfo) that enable storing and retrieving the SchemaInfo objects that are returned by the documented createSchema API endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableCli.getTable",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getTable endpoint.",
          "ground_truth_trace_chain": "TablesApi.md -> TableCli.getTable",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/TablesApi.md",
          "artifact_title": "TableInfoDAO",
          "ground_truth_relationship": "The TableInfoDAO class provides the data persistence layer and model conversion methods that enable the documented getTable API endpoint to retrieve and return table information in the expected TableInfo format.",
          "ground_truth_trace_chain": "TablesApi.md -> TableInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class provides the data persistence layer and mapping functionality for the CatalogInfo objects that are returned by the documented getCatalog endpoint through its toCatalogInfo() conversion method.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The code directly implements the documented getCatalog operation by querying the database for a CatalogInfoDAO entity matching the specified name parameter using Hibernate's query language and returning a single result.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.listFunctions",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listFunctions endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.listFunctions",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.deleteSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.deleteSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.getFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.getFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionInfoDAO",
          "ground_truth_relationship": "The FunctionInfoDAO class provides the data persistence layer that enables the documented getFunction endpoint by mapping database records to FunctionInfo objects through JPA annotations and conversion methods toFunctionInfo() and from().",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and model conversion methods (toVolumeInfo/from) needed to support the documented getVolume API endpoint by mapping between the database representation and the VolumeInfo response type.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.getVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.getVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.deleteVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.deleteVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaInfoDAO",
          "ground_truth_relationship": "The SchemaInfoDAO class provides the data persistence and transformation layer for the SchemaInfo object that is returned by the documented getSchema endpoint, handling the mapping between database records and the API response model.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/SchemasApi.md",
          "artifact_title": "SchemaCli.getSchema",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getSchema endpoint.",
          "ground_truth_trace_chain": "SchemasApi.md -> SchemaCli.getSchema",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogInfoDAO",
          "ground_truth_relationship": "The CatalogInfoDAO class supports the updateCatalog endpoint by providing the data persistence layer and mapping functions (from/toCatalogInfo) that convert between the API's CatalogInfo model and the database entity representation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.updateCatalog",
          "ground_truth_relationship": "The CatalogRepository.updateCatalog method implements the PATCH /catalogs/{name} endpoint by handling catalog updates including name changes, comments, and properties while managing database transactions and validation.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.updateCatalog -> CatalogRepository.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.createCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented createCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.createCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The CatalogRepository.listCatalogs method implements the GET /catalogs endpoint by providing paginated retrieval of catalog information from the database, with support for maxResults and pageToken parameters.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.updateCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.updateCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.getCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented getCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.deleteCatalog",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteCatalog endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.deleteCatalog",
          "ground_truth_relationship": "The deleteCatalog method implements the DELETE /catalogs/{name} API endpoint by handling catalog deletion with schema cleanup, supporting forced deletion via a boolean parameter, and providing appropriate error responses for non-existent catalogs or catalogs with schemas.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.deleteCatalog -> CatalogRepository.deleteCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.getCatalog",
          "ground_truth_relationship": "The getCatalogDAO method implements the database query layer for the GET /catalogs/{name} API endpoint by retrieving a single CatalogInfoDAO record matching the specified catalog name from the database session.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.getCatalog -> CatalogRepository.getCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.addCatalog",
          "ground_truth_relationship": "The CatalogRepository.addCatalog method implements the backend persistence logic for the POST /catalogs API endpoint, handling the creation of a new catalog with validation, transaction management, and database persistence of the catalog metadata and its properties.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.createCatalog -> CatalogRepository.addCatalog",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class implements the data persistence layer for volumes, with fields and conversion methods that match the VolumeInfo structure referenced in the updateVolume API documentation, particularly supporting the comment and name fields that are marked as updatable in the documentation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeCli.updateVolume",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented updateVolume endpoint.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeCli.updateVolume",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/FunctionsApi.md",
          "artifact_title": "FunctionCli.deleteFunction",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented deleteFunction endpoint.",
          "ground_truth_trace_chain": "FunctionsApi.md -> FunctionCli.deleteFunction",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "document_location": "api/Apis/VolumesApi.md",
          "artifact_title": "VolumeInfoDAO",
          "ground_truth_relationship": "The VolumeInfoDAO class provides the data persistence layer and mapping functionality for the createVolume API endpoint by defining the database schema and conversion methods between the API's VolumeInfo model and the database representation.",
          "ground_truth_trace_chain": "VolumesApi.md -> VolumeInfoDAO",
          "traceability_granularity": "Class",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogCli.listCatalogs",
          "ground_truth_relationship": "The code implements a CLI wrapper for the documented listCatalogs endpoint.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogCli.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        },
        {
          "sent_document_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "document_location": "api/Apis/CatalogsApi.md",
          "artifact_title": "CatalogRepository.listCatalogs",
          "ground_truth_relationship": "The code implements the documented listCatalogs endpoint by using database transactions and pagination logic to retrieve catalog records from storage, transform them into CatalogInfo objects with attached properties, and return them in a ListCatalogsResponse with the next page token.",
          "ground_truth_trace_chain": "CatalogsApi.md -> CatalogService.listCatalogs -> CatalogRepository.listCatalogs",
          "traceability_granularity": "Method",
          "confusion_metrics": "False Negative",
          "predicted_relationship": null,
          "relationship_type": null,
          "relationship_explanation": null,
          "predicted_trace_chain": null,
          "predicted_trace_chain_explanation": null,
          "prediction_details": {
            "matches_ground_truth": false,
            "relationship_match": false,
            "missed_by_llm": true
          }
        }
      ]
    }
  ]
}