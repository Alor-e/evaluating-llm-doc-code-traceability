{
  "characteristics": {
    "characteristics": [
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.addCatalog",
        "granularity": "Method",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.addCatalog",
        "granularity": "Method",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.addCatalog",
        "granularity": "Method",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.addCatalog",
        "granularity": "Method",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeCli.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 74,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 176,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 89,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 252,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableCli.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 193,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 156,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 72,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 76,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 93,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.deleteFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.getFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.listFunctions",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.deleteSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.listSchemas",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.updateSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 54,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 196,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.getSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 68,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 65,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogCli.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.deleteCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.getCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.listCatalogs",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.updateCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionService.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionRepository.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "FunctionCli.createFunction",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 80,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": true
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogRepository.addCatalog",
        "granularity": "Method",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogService.createCatalog",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "CatalogInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 58,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeService.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.createVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.deleteVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.getVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.listVolumes",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "VolumeRepository.updateVolume",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 70,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableService.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.createTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.deleteTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.getTable",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TableRepository.listTables",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 71,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 32,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": false,
        "has_return_section": false,
        "is_intro_section": true,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaRepository.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaService.createSchema",
        "granularity": "Method",
        "explicit_mention": true,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      },
      {
        "sample_type": "true_positive",
        "artifact_title": "SchemaInfoDAO",
        "granularity": "Class",
        "explicit_mention": false,
        "doc_length": 61,
        "has_code_example": false,
        "num_code_examples": 0,
        "has_parameters_section": true,
        "has_return_section": true,
        "is_intro_section": false,
        "is_cli_artifact": false
      }
    ],
    "statistics": {
      "total_samples": 580,
      "explicit_mentions": 510,
      "with_code_examples": 0,
      "granularity_distribution": {
        "Method": 515,
        "Class": 65
      },
      "intro_sections": 226,
      "cli_artifacts": 94,
      "avg_doc_length": 83.15344827586208
    }
  },
  "patterns": {
    "patterns": {
      "intro_sections": [
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        }
      ],
      "cli_artifacts": [
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        }
      ],
      "other_artifacts": [
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        }
      ]
    },
    "granularity_patterns": {
      "Method": [
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "<a name=\"generateTemporaryVolumeCredentials\"></a>\n# **generateTemporaryVolumeCredentials**\n> GenerateTemporaryVolumeCredentialResponse generateTemporaryVolumeCredentials(GenerateTemporaryVolumeCredential)\n\nGenerate temporary volume credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryVolumeCredential** | [**GenerateTemporaryVolumeCredential**](../Models/GenerateTemporaryVolumeCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryVolumeCredentialResponse**](../Models/GenerateTemporaryVolumeCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeCli.deleteVolume",
          "doc_text": "# **deleteVolume**\n> oas_any_type_not_mapped deleteVolume(name)\n\nDelete a Volume\n\n    Deletes a volume from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "<a name=\"deleteFunction\"></a>\n# **deleteFunction**\n> oas_any_type_not_mapped deleteFunction(name)\n\nDelete a function\n\n    Deletes the function that matches the supplied name.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "<a name=\"listSchemas\"></a>\n# **listSchemas**\n> ListSchemasResponse listSchemas(catalog\\_name, max\\_results, page\\_token)\n\nList schemas\n\n    Gets an array of schemas for a catalog. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Parent catalog for schemas of interest. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of schemas to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n\n### Return type\n\n[**ListSchemasResponse**](../Models/ListSchemasResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "<a name=\"deleteCatalog\"></a>\n# **deleteCatalog**\n> oas_any_type_not_mapped deleteCatalog(name, force)\n\nDelete a catalog\n\n    Deletes the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "<a name=\"deleteSchema\"></a>\n# **deleteSchema**\n> oas_any_type_not_mapped deleteSchema(full\\_name, force)\n\nDelete a schema\n\n    Deletes the specified schema from the parent catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **force** | **Boolean**| Force deletion even if the catalog is not empty. | [optional] [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# **listVolumes**\n> ListVolumesResponseContent listVolumes(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList Volumes\n\n    Gets an array of available volumes under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| The identifier of the catalog | [default to null] |\n| **schema\\_name** | **String**| The identifier of the schema | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of volumes to return (page length).  If not set, the page length is set to a server configured value. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  Note: this parameter controls only the maximum number of volumes to return. The actual number of volumes returned in a page may be smaller than this value, including 0, even if there are more pages.   | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token returned by a previous request. It must be included in the request to retrieve the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListVolumesResponseContent**](../Models/ListVolumesResponseContent.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableCli.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "<a name=\"deleteTable\"></a>\n# **deleteTable**\n> oas_any_type_not_mapped deleteTable(full\\_name)\n\nDelete a table\n\n    Deletes a table from the specified parent catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**oas_any_type_not_mapped**](../Models/AnyType.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.listFunctions",
          "doc_text": "<a name=\"listFunctions\"></a>\n# **listFunctions**\n> ListFunctionsResponse listFunctions(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList functions\n\n    List functions within the specified parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for functions of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of functions. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of functions to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query. | [optional] [default to null] |\n\n### Return type\n\n[**ListFunctionsResponse**](../Models/ListFunctionsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.listCatalogs",
          "doc_text": "<a name=\"listCatalogs\"></a>\n# **listCatalogs**\n> ListCatalogsResponse listCatalogs(page\\_token, max\\_results)\n\nList catalogs\n\n    Lists the available catalogs. There is no guarantee of a specific ordering of the elements in the list. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **page\\_token** | **String**| Opaque pagination token to go to next page based on previous query.  | [optional] [default to null] |\n| **max\\_results** | **Integer**| Maximum number of catalogs to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n\n### Return type\n\n[**ListCatalogsResponse**](../Models/ListCatalogsResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.deleteFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.getFunction",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.listFunctions",
          "doc_text": "# FunctionsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createFunction**](FunctionsApi.md#createFunction) | **POST** /functions | Create a function. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteFunction**](FunctionsApi.md#deleteFunction) | **DELETE** /functions/{name} | Delete a function |\n| [**getFunction**](FunctionsApi.md#getFunction) | **GET** /functions/{name} | Get a function |\n| [**listFunctions**](FunctionsApi.md#listFunctions) | **GET** /functions | List functions |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryVolumeCredentialsService.generateTemporaryVolumeCredentials",
          "doc_text": "# TemporaryVolumeCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryVolumeCredentials**](TemporaryVolumeCredentialsApi.md#generateTemporaryVolumeCredentials) | **POST** /temporary-volume-credentials | Generate temporary volume credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.deleteSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.listSchemas",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.updateSchema",
          "doc_text": "# SchemasApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createSchema**](SchemasApi.md#createSchema) | **POST** /schemas | Create a schema |\n| [**deleteSchema**](SchemasApi.md#deleteSchema) | **DELETE** /schemas/{full_name} | Delete a schema |\n| [**getSchema**](SchemasApi.md#getSchema) | **GET** /schemas/{full_name} | Get a schema |\n| [**listSchemas**](SchemasApi.md#listSchemas) | **GET** /schemas | List schemas |\n| [**updateSchema**](SchemasApi.md#updateSchema) | **PATCH** /schemas/{full_name} | Update a schema |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "<a name=\"generateTemporaryTableCredentials\"></a>\n# **generateTemporaryTableCredentials**\n> GenerateTemporaryTableCredentialResponse generateTemporaryTableCredentials(GenerateTemporaryTableCredential)\n\nGenerate temporary table credentials.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **GenerateTemporaryTableCredential** | [**GenerateTemporaryTableCredential**](../Models/GenerateTemporaryTableCredential.md)|  | [optional] |\n\n### Return type\n\n[**GenerateTemporaryTableCredentialResponse**](../Models/GenerateTemporaryTableCredentialResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json\n",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "<a name=\"listTables\"></a>\n# **listTables**\n> ListTablesResponse listTables(catalog\\_name, schema\\_name, max\\_results, page\\_token)\n\nList tables\n\n    Gets the list of all available tables under the parent catalog and schema. There is no guarantee of a specific ordering of the elements in the array. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **catalog\\_name** | **String**| Name of parent catalog for tables of interest. | [default to null] |\n| **schema\\_name** | **String**| Parent schema of tables. | [default to null] |\n| **max\\_results** | **Integer**| Maximum number of tables to return. - when set to a value greater than 0, the page length is the minimum of this value and a server configured value; - when set to 0, the page length is set to a server configured value; - when set to a value less than 0, an invalid parameter error is returned;  | [optional] [default to null] |\n| **page\\_token** | **String**| Opaque token to send for the next page of results (pagination). | [optional] [default to null] |\n\n### Return type\n\n[**ListTablesResponse**](../Models/ListTablesResponse.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.getSchema",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.getCatalog",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogCli.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.deleteCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.getCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.listCatalogs",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.updateCatalog",
          "doc_text": "# CatalogsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createCatalog**](CatalogsApi.md#createCatalog) | **POST** /catalogs | Create a catalog |\n| [**deleteCatalog**](CatalogsApi.md#deleteCatalog) | **DELETE** /catalogs/{name} | Delete a catalog |\n| [**getCatalog**](CatalogsApi.md#getCatalog) | **GET** /catalogs/{name} | Get a catalog |\n| [**listCatalogs**](CatalogsApi.md#listCatalogs) | **GET** /catalogs | List catalogs |\n| [**updateCatalog**](CatalogsApi.md#updateCatalog) | **PATCH** /catalogs/{name} | Update a catalog |",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionService.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionRepository.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "FunctionCli.createFunction",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogRepository.addCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "CatalogService.createCatalog",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeService.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.createVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.deleteVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.getVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.listVolumes",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "VolumeRepository.updateVolume",
          "doc_text": "# VolumesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createVolume**](VolumesApi.md#createVolume) | **POST** /volumes | Create a Volume |\n| [**deleteVolume**](VolumesApi.md#deleteVolume) | **DELETE** /volumes/{name} | Delete a Volume |\n| [**getVolume**](VolumesApi.md#getVolume) | **GET** /volumes/{name} | Get a Volume |\n| [**listVolumes**](VolumesApi.md#listVolumes) | **GET** /volumes | List Volumes |\n| [**updateVolume**](VolumesApi.md#updateVolume) | **PATCH** /volumes/{name} | Update a Volume |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableService.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.createTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.deleteTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.getTable",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TableRepository.listTables",
          "doc_text": "# TablesApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**createTable**](TablesApi.md#createTable) | **POST** /tables | Create a table. WARNING: This API is experimental and will change in future versions.  |\n| [**deleteTable**](TablesApi.md#deleteTable) | **DELETE** /tables/{full_name} | Delete a table |\n| [**getTable**](TablesApi.md#getTable) | **GET** /tables/{full_name} | Get a table |\n| [**listTables**](TablesApi.md#listTables) | **GET** /tables | List tables |",
          "granularity": "Method"
        },
        {
          "artifact_title": "TemporaryTableCredentialsService.generateTemporaryTableCredentials",
          "doc_text": "# TemporaryTableCredentialsApi\n\nAll URIs are relative to *http://localhost:8080/api/2.1/unity-catalog*\n\n| Method | HTTP request | Description |\n|------------- | ------------- | -------------|\n| [**generateTemporaryTableCredentials**](TemporaryTableCredentialsApi.md#generateTemporaryTableCredentials) | **POST** /temporary-table-credentials | Generate temporary table credentials. |",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaRepository.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        },
        {
          "artifact_title": "SchemaService.createSchema",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Method"
        }
      ],
      "Class": [
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **createVolume**\n> VolumeInfo createVolume(CreateVolumeRequestContent)\n\nCreate a Volume\n\n    Creates a new volume. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateVolumeRequestContent** | [**CreateVolumeRequestContent**](../Models/CreateVolumeRequestContent.md)|  | |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"updateSchema\"></a>\n# **updateSchema**\n> SchemaInfo updateSchema(full\\_name, UpdateSchema)\n\nUpdate a schema\n\n    Updates the specified schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n| **UpdateSchema** | [**UpdateSchema**](../Models/UpdateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"updateCatalog\"></a>\n# **updateCatalog**\n> CatalogInfo updateCatalog(name, UpdateCatalog)\n\nUpdate a catalog\n\n    Updates the catalog that matches the supplied name. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n| **UpdateCatalog** | [**UpdateCatalog**](../Models/UpdateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"getFunction\"></a>\n# **getFunction**\n> FunctionInfo getFunction(name)\n\nGet a function\n\n    Gets a function from within a parent catalog and schema.\n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The fully-qualified name of the function (of the form __catalog_name__.__schema_name__.__function__name__). | [default to null] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **getVolume**\n> VolumeInfo getVolume(name)\n\nGet a Volume\n\n    Gets a volume for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "VolumeInfoDAO",
          "doc_text": "# **updateVolume**\n> VolumeInfo updateVolume(name, UpdateVolumeRequestContent)\n\nUpdate a Volume\n\n    Updates the specified volume under the specified parent catalog and schema.  Currently only the name or the comment of the volume could be updated. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The three-level (fully qualified) name of the volume | [default to null] |\n| **UpdateVolumeRequestContent** | [**UpdateVolumeRequestContent**](../Models/UpdateVolumeRequestContent.md)|  | [optional] |\n\n### Return type\n\n[**VolumeInfo**](../Models/VolumeInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"getSchema\"></a>\n# **getSchema**\n> SchemaInfo getSchema(full\\_name)\n\nGet a schema\n\n    Gets the specified schema for a catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the schema. | [default to null] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"createTable\"></a>\n# **createTable**\n> TableInfo createTable(CreateTable)\n\nCreate a table. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new table instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateTable** | [**CreateTable**](../Models/CreateTable.md)|  | [optional] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"getCatalog\"></a>\n# **getCatalog**\n> CatalogInfo getCatalog(name)\n\nGet a catalog\n\n    Gets the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **name** | **String**| The name of the catalog. | [default to null] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "TableInfoDAO",
          "doc_text": "<a name=\"getTable\"></a>\n# **getTable**\n> TableInfo getTable(full\\_name)\n\nGet a table\n\n    Gets a table for a specific catalog and schema. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **full\\_name** | **String**| Full name of the table. | [default to null] |\n\n### Return type\n\n[**TableInfo**](../Models/TableInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: Not defined\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "FunctionInfoDAO",
          "doc_text": "<a name=\"createFunction\"></a>\n# **createFunction**\n> FunctionInfo createFunction(CreateFunctionRequest)\n\nCreate a function. WARNING: This API is experimental and will change in future versions. \n\n    Creates a new function instance. WARNING: This API is experimental and will change in future versions. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateFunctionRequest** | [**CreateFunctionRequest**](../Models/CreateFunctionRequest.md)|  | [optional] |\n\n### Return type\n\n[**FunctionInfo**](../Models/FunctionInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "CatalogInfoDAO",
          "doc_text": "<a name=\"createCatalog\"></a>\n# **createCatalog**\n> CatalogInfo createCatalog(CreateCatalog)\n\nCreate a catalog\n\n    Creates a new catalog instance. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateCatalog** | [**CreateCatalog**](../Models/CreateCatalog.md)|  | [optional] |\n\n### Return type\n\n[**CatalogInfo**](../Models/CatalogInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        },
        {
          "artifact_title": "SchemaInfoDAO",
          "doc_text": "<a name=\"createSchema\"></a>\n# **createSchema**\n> SchemaInfo createSchema(CreateSchema)\n\nCreate a schema\n\n    Creates a new schema in the specified catalog. \n\n### Parameters\n\n|Name | Type | Description  | Notes |\n|------------- | ------------- | ------------- | -------------|\n| **CreateSchema** | [**CreateSchema**](../Models/CreateSchema.md)|  | [optional] |\n\n### Return type\n\n[**SchemaInfo**](../Models/SchemaInfo.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n- **Content-Type**: application/json\n- **Accept**: application/json",
          "granularity": "Class"
        }
      ]
    },
    "statistics": {
      "total_analyzed": 580,
      "pattern_distribution": {
        "intro_sections": 226,
        "cli_artifacts": 49,
        "other_artifacts": 305
      },
      "granularity_distribution": {
        "Method": 515,
        "Class": 65
      }
    }
  }
}